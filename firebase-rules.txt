// Firestore Security Rules for Credit Card Management System
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read and update their own profile
      allow read, update: if isOwner(userId);
      
      // New users can be created if authenticated
      allow create: if request.auth != null;
      
      // Admins can read and write all user data
      allow read, write: if isAdmin();
    }
    
    // Cards collection
    match /cards/{cardId} {
      // Users can only access their own cards
      allow read, write: if request.auth != null && 
                           resource.data.user_id == request.auth.uid;
      
      // Admins can access all cards
      allow read, write: if isAdmin();
    }
    
    // Transactions collection
    match /transactions/{transactionId} {
      // Users can only read their own transactions
      allow read: if request.auth != null && 
                    resource.data.user_id == request.auth.uid;
      
      // Users can only create transactions for their own cards
      allow create: if request.auth != null && 
                      request.resource.data.user_id == request.auth.uid;
      
      // Transactions should not be updated or deleted by regular users
      allow update, delete: if false;
      
      // Admins can access all transactions
      allow read, write: if isAdmin();
    }
  }
} 